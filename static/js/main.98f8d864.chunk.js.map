{"version":3,"sources":["components/Header.js","components/Flights.js","components/FlightInfo.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","title","Flights","carriers","flights","currencies","places","quotes","flightStyle","placeMap","Map","i","length","set","PlaceId","CityName","IataCode","carriersMap","CarrierId","Name","map","f","get","OutboundLeg","OriginId","DestinationId","DepartureDate","substring","CarrierIds","Symbol","MinPrice","QuoteId","FlightInfo","useState","outgoingFlights","setOutgoingFlights","incomingFlights","setIncomingFlights","dep","setQueryDep","dest","setQueryDest","depDate","setQueryDepDate","depDay","setQueryDepDay","destDate","setQueryDestDate","destDay","setQueryDestDay","currencyIn","setQueryCurrency","showOutgoingFlights","setShowOutgoingFlights","showIncomingFlights","setShowIncomingFlights","today","Date","mm","String","getDate","padStart","getMonth","yyyy","getFullYear","onSubmit","b","a","reqOptions","method","headers","process","goDate","comebackDate","console","log","reqString","fetch","response","json","preventDefault","fetchMyAPI","id","placeholder","value","onChange","target","required","type","name","min","c","d","e","g","defaultValue","rel","href","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98f8d864.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header(props) { \n    return(\n        <div className=\"header\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport './Flights.css';\n\nfunction Flights (props) { \n    //Split the object into its different sections\n    const carriers = props.flights['Carriers'];\n    const currencies = props.flights['Currencies'];\n    const places = props.flights['Places'];\n    const quotes = props.flights['Quotes'];\n    const flightStyle = props.flights['flightType'];\n\n    //Don't try to access data if it's empty/undefined\n    if (!places || !carriers || !currencies || !quotes) {\n        return null;\n    }  \n\n    //Map the airports and the IATA code with their id for easy lookup later on\n    var placeMap = new Map();\n    for (var i = 0; i < places.length; ++i) {\n        placeMap.set(places[i].PlaceId, places[i].CityName + \" (\" + places[i].IataCode + \")\");\n    }\n\n    //Map the carriers with their id for easy lookup later on\n    var carriersMap = new Map();\n    for (i = 0; i < carriers.length; ++i) {\n        carriersMap.set(carriers[i].CarrierId, carriers[i].Name);\n    }\n\n    //If there is no data, make a single row table saying \"No Result\"\n    if (quotes.length === 0) {\n        return (\n            <div className=\"flights\">\n                <div className=\"flightHeaders\"><p>{flightStyle}</p></div>\n                <table className=\"flightTable\">\n                    <thead>\n                        <tr> <th>No Result</th> </tr>\n                    </thead>\n                    <tbody></tbody>\n                </table>\n            </div>\n        )\n    }\n\n    //Make sure the data is in the proper spot\n    /*console.log(props);\n    console.log(carriers);\n    console.log(currencies);\n    console.log(places);\n    console.log(quotes);*/\n\n    //Use the maps created earlier to get the required data\n    return(\n        <div className=\"flights\">\n            <div className=\"flightHeaders\"><p>{flightStyle}</p></div>\n            <table className=\"flightTable\">\n                <thead>\n                    <tr>\n                        <th>Start City</th>\n                        <th>End City</th>\n                        <th>Date</th>\n                        <th>Carrier</th>\n                        <th>Price</th>\n                    </tr>\n                </thead>\n\n                <tbody>\n                    {quotes && quotes.map(f => {\n                        return (<tr key={f.QuoteId}>\n                            <td>{placeMap.get(f.OutboundLeg.OriginId)}</td>\n                            <td>{placeMap.get(f.OutboundLeg.DestinationId)}</td>\n                            <td>{f.OutboundLeg.DepartureDate.substring(0,10)}</td>\n                            <td>{carriersMap.get(f.OutboundLeg.CarrierIds[0])}</td>\n                            <td>{currencies[0].Symbol + f.MinPrice}</td>\n                        </tr>)\n                    })}\n                </tbody>\n            </table>\n         </div>\n    )\n}\n\nexport default Flights;","import React, { useState } from 'react';\nimport './FlightInfo.css';\nimport './WebsiteInfo.css';\nimport Flights from './Flights';\n\nfunction FlightInfo() { \n\n    //Create the variables for the different paramenters we need\n    const [outgoingFlights,setOutgoingFlights] = useState([])\n    const [incomingFlights,setIncomingFlights] = useState([])\n    const [dep,setQueryDep] = useState(\"\")\n    const [dest,setQueryDest] = useState(\"\")\n    const [depDate,setQueryDepDate] = useState(\"\")\n    const [depDay,setQueryDepDay] = useState(\"\")\n    const [destDate,setQueryDestDate] = useState(\"\")\n    const [destDay,setQueryDestDay] = useState(\"\")\n    const [currencyIn,setQueryCurrency] = useState(\"\")\n    const [showOutgoingFlights,setShowOutgoingFlights] = useState(false)\n    const [showIncomingFlights,setShowIncomingFlights] = useState(false)\n\n    //Get today's date to use as a minimum for the data inputs\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, '0');\n    var mm = String(today.getMonth() + 1).padStart(2, '0');\n    var yyyy = today.getFullYear();\n    today = yyyy + '-' + mm;\n\n    function handleSubmit(b) {\n        b.preventDefault()\n        async function fetchMyAPI() {\n            const reqOptions = {\n                method: 'GET',\n                headers: {\n                    \"x-rapidapi-key\": `${process.env.REACT_APP_API_KEY}`,\n                    \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n                    \"useQueryString\": true\n                }\n            }\n\n            //Consider if the user inputted days\n            var goDate = depDate;\n            var comebackDate = destDate;\n            if (depDay !== \"\") {\n                goDate = goDate + \"-\" + depDay;\n            }\n            if (destDay !== \"\") {\n                comebackDate = comebackDate + \"-\" + destDay;\n            }\n            console.log(depDay);\n            console.log(destDay);\n            console.log(goDate);\n            console.log(comebackDate);\n\n            //Departing flights - Build the api string with the variables and call api\n            var reqString = \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/\" + currencyIn + \"/en-US/\" + dep + \"-sky/\" + dest + \"-sky/\" + goDate;\n            let response = await fetch(reqString, reqOptions)\n            response = await response.json()\n            response[\"flightType\"] = \"Departing Flights\";\n            setOutgoingFlights(response);\n\n            //Returning flights - Build the api string with the variables and call api\n            reqString = \"https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browsequotes/v1.0/US/\" + currencyIn + \"/en-US/\" + dest + \"-sky/\" + dep + \"-sky/\" + comebackDate;\n            response = await fetch(reqString, reqOptions)\n            response = await response.json()\n            response[\"flightType\"] = \"Returning Flights\";\n            setIncomingFlights(response);\n        }\n\n        //Set default values\n        fetchMyAPI()\n        setShowOutgoingFlights(true)\n        setShowIncomingFlights(true)\n        setQueryDep(\"\")\n        setQueryDest(\"\")\n        setQueryDepDate(\"\")\n        setQueryDepDay(\"\")\n        setQueryDestDate(\"\")\n        setQueryDestDay(\"\")\n        setQueryCurrency(\"\")\n    }\n\n    //Create the different types of input: Text - Airports, Calendar - Date, Select - Currency\n    //Show a small text box about how to use the website for the user\n    return(\n        <div className=\"flightInfo\">\n           <form onSubmit={handleSubmit}>\n                <input id=\"queryInput\" placeholder=\"Departure*\" value={dep} onChange={a => setQueryDep(a.target.value)} required/>\n                <input id=\"queryInput\" placeholder=\"Destination*\" value={dest} onChange={b => setQueryDest(b.target.value)} required/>\n                <input id=\"dateFormOne\" type=\"month\" name=\"depDate\" min={today} value={depDate} onChange={c => setQueryDepDate(c.target.value)} required />\n                <input id=\"dayOne\" placeholder=\"Day\" value={depDay} onChange={d => setQueryDepDay(d.target.value)}/>\n                <input id=\"dateFormTwo\" type=\"month\" name=\"destDate\" min={depDate} value={destDate} onChange={e => setQueryDestDate(e.target.value)} required />\n                <input id=\"dayTwo\" placeholder=\"Day\" value={destDay} onChange={f => setQueryDestDay(f.target.value)}/>\n                <select id=\"currency\" placeholder=\"Currency\" name=\"currency\" value={currencyIn} onChange={g => setQueryCurrency(g.target.value)} required>  \n                    <option defaultValue value=\"\"> Currency* </option>\n                    <option value=\"USD\">US Dollar</option>\n                    <option value=\"CAD\">Canadian Dollar</option>\n                    <option value=\"GBP\">British Pound</option>\n                    <option value=\"CNY\">Chinese Yuan</option>\n                    <option value=\"EUR\">Euro</option>\n                    <option value=\"INR\">Indian Rupee</option>\n                    <option value=\"JPY\">Japanese Yen</option>\n                    <option value=\"MXN\">Mexican Peso</option>\n                    <option value=\"RUB\">Russian Ruble</option>\n                </select>\n                \n                <button id=\"submitButton\" className=\"search\">Search</button>\n           </form>\n           \n           <div className=\"websiteInfo\">\n                <h3>Welcome to the Skyscanner Flight Checker</h3>\n                <p>Please enter the 3-letter airport codes along with the desired departure date, return date, and currency. The \"Day\" fields are not required. The best price will be indicated with <span>golden</span> text.</p>\n                <p>Don't know the airport codes? <a rel=\"noreferrer\" href=\"https://airportcod.es/#\"target=\"_blank\">Click Here</a></p>\n            </div>\n\n            { showOutgoingFlights ? <Flights flights={outgoingFlights}></Flights> : <></>}\n            { showIncomingFlights ? <Flights flights={incomingFlights}></Flights> : <></>}\n        </div>\n    )\n}\n\nexport default FlightInfo;\n","import React from 'react';\nimport './Footer.css';\n\nfunction Footer(props) { \n    return(\n        <div className=\"footer\">\n            {props.title}\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport Header from './components/Header';\nimport FlightInfo from './components/FlightInfo';\nimport Footer from './components/Footer';\nimport './App.css';\n\nfunction App() {\n  //Build the different sections of the website\n  return (\n    <div className=\"App\">\n      <Header title=\"Skyscanner Flight Checker\"></Header>\n      <FlightInfo></FlightInfo> \n      <Footer title={'Arjav Patel - 2021\\nMade For: Capital One Summit Challenge'}></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}